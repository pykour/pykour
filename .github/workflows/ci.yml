name: CI

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  lintcheck:
    name: Lint Check with flake8
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install Poetry
      run: |
          python -m pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python -
    - name: Install dependencies
      run: |
        poetry install --with "dev"
    - name: Run flake8
      run: poetry run flake8 src
  formatcheck:
    name: Code Format Check with black
    runs-on: ubuntu-latest
    steps:
     - name: Check out repository
       uses: actions/checkout@v4
     - name: Set up Python
       uses: actions/setup-python@v5
       with:
         python-version: 3.9
     - name: Install Poetry
       run: |
         python -m pip install --upgrade pip
         curl -sSL https://install.python-poetry.org | python -
     - name: Install dependencies
       run: |
         poetry install --with "dev"
     - name: Run black check
       run: poetry run black --check .
  typecheck:
    name: Type Check with mypy
    runs-on: ubuntu-latest
    steps:
     - name: Check out repository
       uses: actions/checkout@v4
     - name: Set up Python
       uses: actions/setup-python@v5
       with:
         python-version: 3.9
     - name: Install Poetry
       run: |
         python -m pip install --upgrade pip
         curl -sSL https://install.python-poetry.org | python -
     - name: Install dependencies
       run: |
         poetry install --with "typing"
     - name: Run mypy
       run: poetry run mypy .
  unittest:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9, 3.10.x, 3.11, 3.12 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python -
      - name: Install dependencies
        run: |
          poetry install --with "test"
      - name: Run tests
        run: |
          poetry run pytest
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force
