name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - "**"
jobs:
  lintcheck:
    name: Lint Check with flake8
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
      - name: Run flake8
        run: uv run flake8 src
  formatcheck:
    name: Code Format Check with black
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
      - name: Run black check
        run: uv run black --check .
  typecheck:
    name: Type Check with mypy
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
      - name: Run mypy
        run: uv run mypy src
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10.x, 3.11, 3.12]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: |
          uv sync --all-extras --test
      - name: Run tests
        run: |
          uv run pytest --cov=pykour --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  e2e:
    name: End-to-End tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10.x, 3.11, 3.12]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: |
          uv sync --all-extras --test
      - name: Run tests
        run: |
          uv run pytest e2e/test_e2e.py
